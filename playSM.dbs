<?xml version="1.0" encoding="UTF-8" ?>
<project name="PostgreSQL" id="Project_29c4a95" template="Default" database="PostgreSQL" >
	<schema name="public" catalogname="sm_db" schemaname="public" >
		<table name="sm_category_fc" >
			<column name="id" type="varchar" decimal="0" jt="12" mandatory="y" />
			<column name="f_name" type="varchar" decimal="0" jt="12" mandatory="y" />
			<column name="category_type" type="varchar" decimal="0" jt="12" />
			<column name="sub_category_type" type="varchar" decimal="0" jt="12" />
			<column name="description" type="varchar" decimal="0" jt="12" />
			<index name="sm_category_fc_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
				<column name="f_name" />
			</index>
		</table>
		<table name="sm_device" >
			<column name="id" type="serial" length="10" decimal="0" jt="4" mandatory="y" autoincrement="y" />
			<column name="name" type="varchar" decimal="0" jt="12" mandatory="y" />
			<column name="label" type="varchar" decimal="0" jt="12" mandatory="y" />
			<column name="uid" type="varchar" decimal="0" jt="12" mandatory="y" />
			<column name="sync_date" type="timestamp" length="29" decimal="6" jt="93" mandatory="y" />
			<column name="description" type="varchar" decimal="0" jt="12" />
			<column name="visible" type="bool" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo>true</defo>
			</column>
			<column name="reliable" type="bool" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo>true</defo>
			</column>
			<index name="sm_device_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="idx_sm_device_device_uid" unique="UNIQUE" >
				<column name="uid" />
			</index>
		</table>
		<table name="sm_exif" >
			<column name="id" type="varchar" decimal="0" jt="12" mandatory="y" />
			<column name="date_time" type="timestamp" length="29" decimal="6" jt="93" />
			<column name="date_time_original" type="timestamp" length="29" decimal="6" jt="93" />
			<column name="date_time_digitized" type="timestamp" length="29" decimal="6" jt="93" />
			<column name="make" type="varchar" decimal="0" jt="12" />
			<column name="model" type="varchar" decimal="0" jt="12" />
			<column name="software" type="varchar" decimal="0" jt="12" />
			<column name="exif_image_width" type="varchar" decimal="0" jt="12" />
			<column name="exif_image_height" type="varchar" decimal="0" jt="12" />
			<column name="gps_version_id" type="varchar" decimal="0" jt="12" />
			<column name="gps_latitude_ref" type="varchar" decimal="0" jt="12" />
			<column name="gps_latitude" type="varchar" decimal="0" jt="12" />
			<column name="gps_longitude_ref" type="varchar" decimal="0" jt="12" />
			<column name="gps_longitude" type="varchar" decimal="0" jt="12" />
			<column name="gps_altitude_ref" type="varchar" decimal="0" jt="12" />
			<column name="gps_altitude" type="varchar" decimal="0" jt="12" />
			<column name="gps_time_stamp" type="varchar" decimal="0" jt="12" />
			<column name="gps_processing_method" type="varchar" decimal="0" jt="12" />
			<column name="gps_date_stamp" type="varchar" decimal="0" jt="12" />
			<column name="gps_latitude_dec" type="numeric" decimal="0" jt="2" />
			<column name="gps_longitude_dec" type="numeric" decimal="0" jt="2" />
			<index name="sm_exif_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<fk name="fk_sm_exif_sm_file_card" to_schema="public" to_table="sm_file_card" >
				<fk_column name="id" pk="id" />
			</fk>
		</table>
		<table name="sm_file_card" >
			<column name="id" type="varchar" decimal="0" jt="12" mandatory="y" />
			<column name="device_uid" type="varchar" decimal="0" jt="12" mandatory="y" />
			<column name="f_parent" type="varchar" decimal="0" jt="12" mandatory="y" />
			<column name="f_name" type="varchar" decimal="0" jt="12" mandatory="y" />
			<column name="f_extension" type="varchar" decimal="0" jt="12" />
			<column name="f_creation_date" type="timestamp" length="29" decimal="6" jt="93" mandatory="y" />
			<column name="f_last_modified_date" type="timestamp" length="29" decimal="6" jt="93" mandatory="y" />
			<column name="f_size" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="f_mime_type_java" type="varchar" decimal="0" jt="12" />
			<column name="sha256" type="varchar" decimal="0" jt="12" />
			<column name="f_name_lc" type="varchar" decimal="0" jt="12" mandatory="y" />
			<index name="sm_file_card_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="idx_f_parent" unique="NORMAL" >
				<column name="f_parent" />
			</index>
			<index name="idx_fc_f_name_lc" unique="NORMAL" >
				<column name="f_name_lc" />
			</index>
			<index name="idx_last_modified" unique="NORMAL" >
				<column name="f_last_modified_date" />
			</index>
			<index name="idx_sha256" unique="NORMAL" >
				<column name="sha256" />
			</index>
			<index name="idx_sm_file_card_device_uid" unique="NORMAL" >
				<column name="device_uid" />
				<column name="f_parent" />
			</index>
			<index name="idx_sm_file_card_sha256" unique="NORMAL" >
				<column name="sha256" />
				<column name="f_name" />
			</index>
			<fk name="fk_sm_file_card_sm_device" to_schema="public" to_table="sm_device" >
				<fk_column name="device_uid" pk="uid" />
			</fk>
		</table>
		<table name="sm_job_path_move" >
			<column name="id" type="serial" length="10" decimal="0" jt="4" mandatory="y" autoincrement="y" />
			<column name="device_uid" type="varchar" decimal="0" jt="12" mandatory="y" />
			<column name="path_from" type="varchar" decimal="0" jt="12" mandatory="y" />
			<column name="path_to" type="varchar" decimal="0" jt="12" mandatory="y" />
			<column name="done" type="timestamp" length="29" decimal="6" jt="93" />
			<index name="idx_sm_job_path_move_device_uid" unique="PRIMARY_KEY" >
				<column name="device_uid" />
				<column name="path_from" />
			</index>
			<index name="unq_sm_job_path_move" unique="UNIQUE" >
				<column name="id" />
			</index>
		</table>
		<sequence name="sm_device_id_seq" start="1" />
		<sequence name="sm_job_path_move_id_seq" start="1" />
		<procedure name="gin_extract_query_trgm" id="Procedure_31f373e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.gin_extract_query_trgm(text, internal, smallint, internal, internal, internal, internal)
 RETURNS internal
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/pg_trgm', $function$gin_extract_query_trgm$function$
]]></string>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="1111" type="internal" />
			<input_param name="$3" jt="5" type="int2" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="1111" type="internal" />
			<input_param name="$6" jt="1111" type="internal" />
			<input_param name="$7" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="gin_extract_value_trgm" id="Procedure_18572c6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.gin_extract_value_trgm(text, internal)
 RETURNS internal
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/pg_trgm', $function$gin_extract_value_trgm$function$
]]></string>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="gin_trgm_consistent" id="Procedure_4f90cef" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.gin_trgm_consistent(internal, smallint, text, integer, internal, internal, internal, internal)
 RETURNS boolean
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/pg_trgm', $function$gin_trgm_consistent$function$
]]></string>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="5" type="int2" />
			<input_param name="$3" jt="12" type="text" />
			<input_param name="$4" jt="4" type="int4" />
			<input_param name="$5" jt="1111" type="internal" />
			<input_param name="$6" jt="1111" type="internal" />
			<input_param name="$7" jt="1111" type="internal" />
			<input_param name="$8" jt="1111" type="internal" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="gin_trgm_triconsistent" id="Procedure_43c1995" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.gin_trgm_triconsistent(internal, smallint, text, integer, internal, internal, internal)
 RETURNS "char"
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/pg_trgm', $function$gin_trgm_triconsistent$function$
]]></string>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="5" type="int2" />
			<input_param name="$3" jt="12" type="text" />
			<input_param name="$4" jt="4" type="int4" />
			<input_param name="$5" jt="1111" type="internal" />
			<input_param name="$6" jt="1111" type="internal" />
			<input_param name="$7" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1" type="char" />
		</procedure>
		<procedure name="gtrgm_compress" id="Procedure_4d6757a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.gtrgm_compress(internal)
 RETURNS internal
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/pg_trgm', $function$gtrgm_compress$function$
]]></string>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="gtrgm_consistent" id="Procedure_426bf19" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.gtrgm_consistent(internal, text, smallint, oid, internal)
 RETURNS boolean
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/pg_trgm', $function$gtrgm_consistent$function$
]]></string>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="5" type="int2" />
			<input_param name="$4" jt="-5" type="oid" />
			<input_param name="$5" jt="1111" type="internal" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="gtrgm_decompress" id="Procedure_39d75ef" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.gtrgm_decompress(internal)
 RETURNS internal
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/pg_trgm', $function$gtrgm_decompress$function$
]]></string>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="gtrgm_distance" id="Procedure_58969b0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.gtrgm_distance(internal, text, smallint, oid, internal)
 RETURNS double precision
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/pg_trgm', $function$gtrgm_distance$function$
]]></string>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="5" type="int2" />
			<input_param name="$4" jt="-5" type="oid" />
			<input_param name="$5" jt="1111" type="internal" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="gtrgm_in" id="Procedure_dc7be5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.gtrgm_in(cstring)
 RETURNS gtrgm
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/pg_trgm', $function$gtrgm_in$function$
]]></string>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="gtrgm" />
		</procedure>
		<procedure name="gtrgm_out" id="Procedure_20d7307" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.gtrgm_out(gtrgm)
 RETURNS cstring
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/pg_trgm', $function$gtrgm_out$function$
]]></string>
			<input_param name="$1" jt="1111" type="gtrgm" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="gtrgm_penalty" id="Procedure_4056952" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.gtrgm_penalty(internal, internal, internal)
 RETURNS internal
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/pg_trgm', $function$gtrgm_penalty$function$
]]></string>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<input_param name="$3" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="gtrgm_picksplit" id="Procedure_2b073a3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.gtrgm_picksplit(internal, internal)
 RETURNS internal
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/pg_trgm', $function$gtrgm_picksplit$function$
]]></string>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="gtrgm_same" id="Procedure_4dbebf1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.gtrgm_same(gtrgm, gtrgm, internal)
 RETURNS internal
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/pg_trgm', $function$gtrgm_same$function$
]]></string>
			<input_param name="$1" jt="1111" type="gtrgm" />
			<input_param name="$2" jt="1111" type="gtrgm" />
			<input_param name="$3" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="gtrgm_union" id="Procedure_252b8ac" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.gtrgm_union(internal, internal)
 RETURNS gtrgm
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/pg_trgm', $function$gtrgm_union$function$
]]></string>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="gtrgm" />
		</procedure>
		<procedure name="set_limit" id="Procedure_31664d8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.set_limit(real)
 RETURNS real
 LANGUAGE c
 STRICT
AS '$libdir/pg_trgm', $function$set_limit$function$
]]></string>
			<input_param name="$1" jt="7" type="float4" />
			<result_param name="returnValue" jt="7" type="float4" />
		</procedure>
		<procedure name="show_limit" id="Procedure_5a83c85" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.show_limit()
 RETURNS real
 LANGUAGE c
 STABLE PARALLEL SAFE STRICT
AS '$libdir/pg_trgm', $function$show_limit$function$
]]></string>
			<result_param name="returnValue" jt="7" type="float4" />
		</procedure>
		<procedure name="show_trgm" id="Procedure_f152fb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.show_trgm(text)
 RETURNS text[]
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/pg_trgm', $function$show_trgm$function$
]]></string>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="2003" type="_text" />
		</procedure>
		<procedure name="similarity" id="Procedure_38f9d88" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.similarity(text, text)
 RETURNS real
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/pg_trgm', $function$similarity$function$
]]></string>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="7" type="float4" />
		</procedure>
		<procedure name="similarity_dist" id="Procedure_594d219" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.similarity_dist(text, text)
 RETURNS real
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/pg_trgm', $function$similarity_dist$function$
]]></string>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="7" type="float4" />
		</procedure>
		<procedure name="similarity_op" id="Procedure_35323fd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.similarity_op(text, text)
 RETURNS boolean
 LANGUAGE c
 STABLE PARALLEL SAFE STRICT
AS '$libdir/pg_trgm', $function$similarity_op$function$
]]></string>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="word_similarity" id="Procedure_e12656" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.word_similarity(text, text)
 RETURNS real
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/pg_trgm', $function$word_similarity$function$
]]></string>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="7" type="float4" />
		</procedure>
		<procedure name="word_similarity_commutator_op" id="Procedure_13fca1b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.word_similarity_commutator_op(text, text)
 RETURNS boolean
 LANGUAGE c
 STABLE PARALLEL SAFE STRICT
AS '$libdir/pg_trgm', $function$word_similarity_commutator_op$function$
]]></string>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="word_similarity_dist_commutator_op" id="Procedure_4429f34" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.word_similarity_dist_commutator_op(text, text)
 RETURNS real
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/pg_trgm', $function$word_similarity_dist_commutator_op$function$
]]></string>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="7" type="float4" />
		</procedure>
		<procedure name="word_similarity_dist_op" id="Procedure_1757b1a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.word_similarity_dist_op(text, text)
 RETURNS real
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/pg_trgm', $function$word_similarity_dist_op$function$
]]></string>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="7" type="float4" />
		</procedure>
		<procedure name="word_similarity_op" id="Procedure_593d8b8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.word_similarity_op(text, text)
 RETURNS boolean
 LANGUAGE c
 STABLE PARALLEL SAFE STRICT
AS '$libdir/pg_trgm', $function$word_similarity_op$function$
]]></string>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
	</schema>
	<connector name="PostgreSQL" database="PostgreSQL" driver_class="org.postgresql.Driver" driver_jar="postgresql-42.2.2.jar" driver_desc="Standard" url="jdbc:postgresql://localhost:5432/sm_db?user=sm_user&amp;password=123" host="msk-tempg-db01t" port="5433" instance="postgres" user="oa_camunda" passwd="Y2FtdW5kYQ==" />
	<layout name="Default Layout" id="Layout_2ff5c29" joined_routing="y" show_relation="columns" >
		<entity schema="public" name="sm_device" color="BED3F4" x="304" y="48" />
		<entity schema="public" name="sm_exif" color="BED3F4" x="624" y="48" />
		<entity schema="public" name="sm_file_card" color="BED3F4" x="384" y="320" />
		<entity schema="public" name="sm_job_path_move" color="BED3F4" x="64" y="64" />
		<entity schema="public" name="sm_category_fc" color="BED3F4" x="48" y="352" />
		<script name="Sql_Editor" id="Editor_dc628f" language="SQL" >
			<string><![CDATA[CREATE SCHEMA public;

CREATE SEQUENCE sm_device_id_seq START WITH 1;

CREATE SEQUENCE sm_job_path_move_id_seq START WITH 1;

CREATE TABLE sm_category_fc ( 
	id                   varchar  NOT NULL ,
	f_name               varchar  NOT NULL ,
	category_type        varchar   ,
	sub_category_type    varchar   ,
	description          varchar   ,
	CONSTRAINT sm_category_fc_pkey PRIMARY KEY ( id, f_name )
 );

CREATE TABLE sm_device ( 
	id                   serial  NOT NULL ,
	name                 varchar  NOT NULL ,
	"label"              varchar  NOT NULL ,
	uid                  varchar  NOT NULL ,
	sync_date            timestamp  NOT NULL ,
	description          varchar   ,
	visible              bool DEFAULT true NOT NULL ,
	reliable             bool DEFAULT true NOT NULL ,
	CONSTRAINT sm_device_pkey PRIMARY KEY ( id ),
	CONSTRAINT idx_sm_device_device_uid UNIQUE ( uid ) 
 );

CREATE TABLE sm_file_card ( 
	id                   varchar  NOT NULL ,
	device_uid           varchar  NOT NULL ,
	f_parent             varchar  NOT NULL ,
	f_name               varchar  NOT NULL ,
	f_extension          varchar   ,
	f_creation_date      timestamp  NOT NULL ,
	f_last_modified_date timestamp  NOT NULL ,
	f_size               bigint   ,
	f_mime_type_java     varchar   ,
	sha256               varchar   ,
	f_name_lc            varchar  NOT NULL ,
	CONSTRAINT sm_file_card_pkey PRIMARY KEY ( id ),
	CONSTRAINT fk_sm_file_card_sm_device FOREIGN KEY ( device_uid ) REFERENCES sm_device( uid )  ,
	CONSTRAINT fk_sm_file_card_sm_category_fc FOREIGN KEY ( sha256, f_name ) REFERENCES sm_category_fc( id, f_name )  
 );

CREATE INDEX idx_f_parent ON sm_file_card ( f_parent );

CREATE INDEX idx_fc_f_name_lc ON sm_file_card ( f_name_lc );

CREATE INDEX idx_last_modified ON sm_file_card ( f_last_modified_date );

CREATE INDEX idx_sha256 ON sm_file_card ( sha256 );

CREATE INDEX idx_sm_file_card_device_uid ON sm_file_card ( device_uid, f_parent );

CREATE INDEX idx_sm_file_card_sha256 ON sm_file_card ( sha256, f_name );

CREATE TABLE sm_job_path_move ( 
	id                   serial  NOT NULL ,
	device_uid           varchar  NOT NULL ,
	path_from            varchar  NOT NULL ,
	path_to              varchar  NOT NULL ,
	done                 timestamp   ,
	CONSTRAINT idx_sm_job_path_move_device_uid PRIMARY KEY ( device_uid, path_from ),
	CONSTRAINT unq_sm_job_path_move UNIQUE ( id ) 
 );

CREATE TABLE sm_exif ( 
	id                   varchar  NOT NULL ,
	date_time            timestamp   ,
	date_time_original   timestamp   ,
	date_time_digitized  timestamp   ,
	make                 varchar   ,
	model                varchar   ,
	software             varchar   ,
	exif_image_width     varchar   ,
	exif_image_height    varchar   ,
	gps_version_id       varchar   ,
	gps_latitude_ref     varchar   ,
	gps_latitude         varchar   ,
	gps_longitude_ref    varchar   ,
	gps_longitude        varchar   ,
	gps_altitude_ref     varchar   ,
	gps_altitude         varchar   ,
	gps_time_stamp       varchar   ,
	gps_processing_method varchar   ,
	gps_date_stamp       varchar   ,
	gps_latitude_dec     numeric(-9999999,0)   ,
	gps_longitude_dec    numeric(-9999999,0)   ,
	CONSTRAINT sm_exif_pkey PRIMARY KEY ( id ),
	CONSTRAINT fk_sm_exif_sm_file_card FOREIGN KEY ( id ) REFERENCES sm_file_card( id )  
 );

CREATE OR REPLACE FUNCTION public.gin_extract_query_trgm(text, internal, smallint, internal, internal, internal, internal)
 RETURNS internal
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/pg_trgm', $function$gin_extract_query_trgm$function$

CREATE OR REPLACE FUNCTION public.gin_extract_value_trgm(text, internal)
 RETURNS internal
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/pg_trgm', $function$gin_extract_value_trgm$function$

CREATE OR REPLACE FUNCTION public.gin_trgm_consistent(internal, smallint, text, integer, internal, internal, internal, internal)
 RETURNS boolean
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/pg_trgm', $function$gin_trgm_consistent$function$

CREATE OR REPLACE FUNCTION public.gin_trgm_triconsistent(internal, smallint, text, integer, internal, internal, internal)
 RETURNS "char"
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/pg_trgm', $function$gin_trgm_triconsistent$function$

CREATE OR REPLACE FUNCTION public.gtrgm_compress(internal)
 RETURNS internal
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/pg_trgm', $function$gtrgm_compress$function$

CREATE OR REPLACE FUNCTION public.gtrgm_consistent(internal, text, smallint, oid, internal)
 RETURNS boolean
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/pg_trgm', $function$gtrgm_consistent$function$

CREATE OR REPLACE FUNCTION public.gtrgm_decompress(internal)
 RETURNS internal
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/pg_trgm', $function$gtrgm_decompress$function$

CREATE OR REPLACE FUNCTION public.gtrgm_distance(internal, text, smallint, oid, internal)
 RETURNS double precision
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/pg_trgm', $function$gtrgm_distance$function$

CREATE OR REPLACE FUNCTION public.gtrgm_in(cstring)
 RETURNS gtrgm
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/pg_trgm', $function$gtrgm_in$function$

CREATE OR REPLACE FUNCTION public.gtrgm_out(gtrgm)
 RETURNS cstring
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/pg_trgm', $function$gtrgm_out$function$

CREATE OR REPLACE FUNCTION public.gtrgm_penalty(internal, internal, internal)
 RETURNS internal
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/pg_trgm', $function$gtrgm_penalty$function$

CREATE OR REPLACE FUNCTION public.gtrgm_picksplit(internal, internal)
 RETURNS internal
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/pg_trgm', $function$gtrgm_picksplit$function$

CREATE OR REPLACE FUNCTION public.gtrgm_same(gtrgm, gtrgm, internal)
 RETURNS internal
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/pg_trgm', $function$gtrgm_same$function$

CREATE OR REPLACE FUNCTION public.gtrgm_union(internal, internal)
 RETURNS gtrgm
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/pg_trgm', $function$gtrgm_union$function$

CREATE OR REPLACE FUNCTION public.set_limit(real)
 RETURNS real
 LANGUAGE c
 STRICT
AS '$libdir/pg_trgm', $function$set_limit$function$

CREATE OR REPLACE FUNCTION public.show_limit()
 RETURNS real
 LANGUAGE c
 STABLE PARALLEL SAFE STRICT
AS '$libdir/pg_trgm', $function$show_limit$function$

CREATE OR REPLACE FUNCTION public.show_trgm(text)
 RETURNS text[]
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/pg_trgm', $function$show_trgm$function$

CREATE OR REPLACE FUNCTION public.similarity(text, text)
 RETURNS real
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/pg_trgm', $function$similarity$function$

CREATE OR REPLACE FUNCTION public.similarity_dist(text, text)
 RETURNS real
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/pg_trgm', $function$similarity_dist$function$

CREATE OR REPLACE FUNCTION public.similarity_op(text, text)
 RETURNS boolean
 LANGUAGE c
 STABLE PARALLEL SAFE STRICT
AS '$libdir/pg_trgm', $function$similarity_op$function$

CREATE OR REPLACE FUNCTION public.word_similarity(text, text)
 RETURNS real
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/pg_trgm', $function$word_similarity$function$

CREATE OR REPLACE FUNCTION public.word_similarity_commutator_op(text, text)
 RETURNS boolean
 LANGUAGE c
 STABLE PARALLEL SAFE STRICT
AS '$libdir/pg_trgm', $function$word_similarity_commutator_op$function$

CREATE OR REPLACE FUNCTION public.word_similarity_dist_commutator_op(text, text)
 RETURNS real
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/pg_trgm', $function$word_similarity_dist_commutator_op$function$

CREATE OR REPLACE FUNCTION public.word_similarity_dist_op(text, text)
 RETURNS real
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/pg_trgm', $function$word_similarity_dist_op$function$

CREATE OR REPLACE FUNCTION public.word_similarity_op(text, text)
 RETURNS boolean
 LANGUAGE c
 STABLE PARALLEL SAFE STRICT
AS '$libdir/pg_trgm', $function$word_similarity_op$function$
]]></string>
		</script>
	</layout>
	<layout name="Sample Layout with Tools" id="Layout_13ab4a1" show_column_type="y" show_relation="columns" >
		<callout x="48" y="48" pointer="NO" >
			<comment><![CDATA[Double-click any table, column or foreign key to edit, right-click to start one of the tools below.
Use the Relational Data Browse for simultaneously exploring data from multiple tables.
All tools will be saved to project file and can be reopen.]]></comment>
		</callout>
		<script name="Sample SQL Editor" id="Editor_23f9cd7" language="SQL" >
			<string><![CDATA[SELECT * 
FROM
	"public".sm_category_fc c;]]></string>
		</script>
	</layout>
</project>